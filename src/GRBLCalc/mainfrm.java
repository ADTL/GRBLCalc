package GRBLCalc;

    import gnu.io.*;
    import java.io.*;
    import java.util.ArrayList;
    import java.util.List;
    import javax.swing.JOptionPane;
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Jason
 */
    
public class mainfrm extends javax.swing.JFrame implements SerialPortEventListener{

    /**
     * Creates new form mainfrm
     */
    String tSettings[];
    
    int MaxCmds = 100;
    CommPort MyComm;
    private InputStream StrIn;
    private OutputStream StrOut;
    public boolean isReady = true;

    public mainfrm() {
        initComponents();
        List<CommPortIdentifier> portList = getSerialPortList();
        
        lst_comm.removeAll();
        
        if (portList.size() < 1) {
            lst_comm.addItem("NONE");
        } else {
            // Sort?
            //java.util.Collections.sort(portList);

            java.util.Iterator<CommPortIdentifier> portIter = portList.iterator();

            while ( portIter.hasNext() ) 
            {
                CommPortIdentifier portIdentifier = portIter.next();
                lst_comm.addItem(portIdentifier.getName());
            }
            
            lst_comm.setSelectedIndex(0);
        }
    }

    //private CommPort MyComm;
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        bp_xy_text = new javax.swing.JTextField();
        spr_xy_text = new javax.swing.JTextField();
        pt_xy_text = new javax.swing.JTextField();
        ms_xy_text = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        rp_z_text = new javax.swing.JTextField();
        spr_z_text = new javax.swing.JTextField();
        ms_z_text = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        spw_g_text = new javax.swing.JTextField();
        fr_g_text = new javax.swing.JTextField();
        sr_g_text = new javax.swing.JTextField();
        as_g_text = new javax.swing.JTextField();
        im_g_text = new javax.swing.JTextField();
        a_g_text = new javax.swing.JTextField();
        cd_g_text = new javax.swing.JTextField();
        eac_gc_chk = new javax.swing.JCheckBox();
        jPanel4 = new javax.swing.JPanel();
        ml_astcfg_chk = new javax.swing.JCheckBox();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        stat_text = new javax.swing.JTextArea();
        jPanel6 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        lst_comm = new javax.swing.JComboBox();
        jLabel15 = new javax.swing.JLabel();
        baud_text = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("AtomSoftTech - GRBL Calculator");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("X/Y Config"));

        jLabel1.setText("Belt Pitch (in)");

        jLabel2.setText("Steps Per Rev (Motor)");

        jLabel3.setText("Pully Teeth");

        jLabel4.setText("Microsteps");

        bp_xy_text.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        bp_xy_text.setText("0.08");
        bp_xy_text.setName("");

        spr_xy_text.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        spr_xy_text.setText("400");
        spr_xy_text.setName("");

        pt_xy_text.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        pt_xy_text.setText("18");
        pt_xy_text.setName("");

        ms_xy_text.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "16", "8", "4", "2", "1" }));
        ms_xy_text.setName("");
        ms_xy_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ms_xy_textActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(spr_xy_text, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(bp_xy_text, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pt_xy_text, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ms_xy_text, javax.swing.GroupLayout.Alignment.TRAILING, 0, 47, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(bp_xy_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(spr_xy_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(pt_xy_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(ms_xy_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Z Config"));

        jLabel5.setText("Rod Pitch");

        rp_z_text.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        rp_z_text.setText("1.25");
        rp_z_text.setName("");

        spr_z_text.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        spr_z_text.setText("400");
        spr_z_text.setName("");

        ms_z_text.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "16", "8", "4", "2", "1" }));
        ms_z_text.setSelectedIndex(3);
        ms_z_text.setName("");

        jLabel6.setText("Steps Per Rev (Motor)");

        jLabel7.setText("Microsteps");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addGap(16, 16, 16)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(spr_z_text)
                            .addComponent(ms_z_text, 0, 47, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(rp_z_text, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(rp_z_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spr_z_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ms_z_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(0, 8, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("General Config"));

        jLabel8.setText("Step Pulse Width (uS)");

        jLabel9.setText("Feed Rate (mm/min)");

        jLabel10.setText("Seek Rate (mm/min)");

        jLabel11.setText("Arc Segment (mm)");

        jLabel12.setText("Invert Mask");

        jLabel13.setText("Acceleration (mm/s2)");

        jLabel14.setText("Corner Deviation (mm)");

        spw_g_text.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        spw_g_text.setText("30");
        spw_g_text.setName("");

        fr_g_text.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        fr_g_text.setText("750");
        fr_g_text.setName("");

        sr_g_text.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        sr_g_text.setText("1100");
        sr_g_text.setName("");

        as_g_text.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        as_g_text.setText("0.1");
        as_g_text.setName("");

        im_g_text.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        im_g_text.setText("10001000");
        im_g_text.setName("");

        a_g_text.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        a_g_text.setText("9.8");
        a_g_text.setName("");

        cd_g_text.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        cd_g_text.setText("0.05");
        cd_g_text.setName("");

        eac_gc_chk.setSelected(true);
        eac_gc_chk.setLabel("Enable AtomCNC Config");
        eac_gc_chk.setName("");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel10)
                            .addComponent(jLabel9)
                            .addComponent(jLabel8)
                            .addComponent(jLabel14)
                            .addComponent(jLabel13)
                            .addComponent(jLabel12))
                        .addGap(42, 42, 42)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(as_g_text, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sr_g_text, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(a_g_text, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(im_g_text, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)
                            .addComponent(cd_g_text)
                            .addComponent(spw_g_text)
                            .addComponent(fr_g_text)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(eac_gc_chk)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(spw_g_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fr_g_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sr_g_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(as_g_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(im_g_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(a_g_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cd_g_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(eac_gc_chk)
                .addGap(0, 7, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("AtomCNC Config"));

        ml_astcfg_chk.setSelected(true);
        ml_astcfg_chk.setText("Motor Lock");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ml_astcfg_chk)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(ml_astcfg_chk)
                .addGap(0, 84, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Output & Status"));

        stat_text.setColumns(20);
        stat_text.setRows(5);
        stat_text.setName("status_text");
        jScrollPane1.setViewportView(stat_text);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 327, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Functions"));

        jButton1.setText("Calculate");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel15.setText("Baud Rate");

        baud_text.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        baud_text.setText("9600");

        jLabel16.setText("bps");

        jButton2.setText("Program Settings");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(lst_comm, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(baud_text, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel16)
                        .addGap(0, 8, Short.MAX_VALUE))
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(3, 3, 3))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lst_comm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(baud_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ms_xy_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ms_xy_textActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ms_xy_textActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        calcit();        
    }//GEN-LAST:event_jButton1ActionPerformed
    public boolean isCalced = false;
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String tCOMM = lst_comm.getSelectedItem().toString();
        int tBAUD = Integer.parseInt(baud_text.getText());
        
        if(isCalced == false) 
            calcit();
        
        if(isCalced == false) return;
        
        try {
            OpenPort(tCOMM, tBAUD);
        } catch (Exception e) {
            //ClosePort();
            JOptionPane.showMessageDialog(this,"Port in use!");
            return;
        }

        stat_text.append("\n\nStart of programming:\n===========================");

        for(int x=0;x<MaxCmds;x++)
        {          
            if("".equals(tSettings[x])){
                stat_text.append("\n===========================\nSending Complete!");
                x=MaxCmds;
            } else {
                stat_text.append("\nSent: " + tSettings[x].substring(0,(tSettings[x].length() - 2)));

                try {
                    SendStr(tSettings[x]);                  
                } catch (Exception e) {
                    ClosePort();
                }

                while(isReady == false){}
                stat_text.append("... OK!");
            }   
        }

        ClosePort();
        
    }//GEN-LAST:event_jButton2ActionPerformed

    public void calcit(){
        double xybeltpitch = 0.0;
        double xystepsperrev = 0.0;
        double xypulleyteeth = 0.0;
        double xymicrosteps = 0.0;
        double zrodpitch = 0.0;
        double zstepsperrev = 0.0;
        double zmicrosteps = 0.0;
        double steppulsewidth = 0.0;
        double feedrate = 0.0;
        double seekrate = 0.0;
        double mmperarcsegment = 0.0;
        double invertmaskbin = 0.0;
        double accel = 0.0;
        double corneringdev = 0.0;
        String MyErr = "";
        double useLock = 0;
        boolean useAtomCNC = false;
         
        xybeltpitch = Double.valueOf(this.bp_xy_text.getText());
        xystepsperrev = Double.valueOf(this.spr_xy_text.getText());
        xypulleyteeth = Double.valueOf(this.pt_xy_text.getText());
        xymicrosteps = Double.valueOf(this.ms_xy_text.getSelectedItem().toString());
        zrodpitch = Double.valueOf(this.rp_z_text.getText());
        zstepsperrev = Double.valueOf(this.spr_z_text.getText());
        zmicrosteps = Double.valueOf(this.ms_z_text.getSelectedItem().toString());
        steppulsewidth = Double.valueOf(this.spw_g_text.getText());
        feedrate = Double.valueOf(this.fr_g_text.getText());
        seekrate = Double.valueOf(this.sr_g_text.getText());
        mmperarcsegment = Double.valueOf(this.as_g_text.getText());
        invertmaskbin = Double.valueOf(this.im_g_text.getText());
        accel = Double.valueOf(this.a_g_text.getText());
        corneringdev = Double.valueOf(this.cd_g_text.getText());
        
        if (this.ml_astcfg_chk.isSelected() == true)
            useLock = 1;
        else
            useLock = 0;

        int invertmask = Integer.parseInt(this.im_g_text.getText(),2);
        double xybeltpitchmm = xybeltpitch * 25.4;
        double xystepspermm = xystepsperrev * xymicrosteps / xypulleyteeth / xybeltpitchmm;
        double zstepspermm = zstepsperrev * zmicrosteps / zrodpitch;
        double xymaxstepspersec = seekrate/60 * xystepspermm;
        double zmaxstepspersec = seekrate/60 * zstepspermm;
        double xymaxstepperiod = 1000000/xymaxstepspersec;
        double zmaxstepperiod = 1000000/zmaxstepspersec;
        int errFlag = 0;
        
        String testSTR = "Calculated settings for your machine:\n";
        stat_text.setText(testSTR);   
        
        if (xymaxstepspersec > 30000)
        {
            errFlag = 1;
            stat_text.append("X/Y Steps Per Second > 30KHz\n");
        }

        if (zmaxstepspersec > 30000)
        {
            errFlag = 1;
            stat_text.append("Z Steps Per Second > 30KHz\n");
        }

        if (xymaxstepperiod < 2 * steppulsewidth)
        {
            errFlag = 1;
            stat_text.append("X/Y max step period < 2x step pulse width! >\n");
        }

        if (zmaxstepperiod < 2 * steppulsewidth)
        {
            errFlag = 1;
            stat_text.append("Z max step period < 2x step pulse width! >\n");
        }

        if ((feedrate - seekrate) > 0)
        {
            errFlag = 1;
            stat_text.append("Feed rate faster than seek rate?!\n");
        }

        if (errFlag == 0)
        {                    
            stat_text.append("\n$0=" + RoundIt(xystepspermm,3) );
            stat_text.append("\n$1=" + RoundIt(xystepspermm,3));
            stat_text.append("\n$2=" + zstepspermm ); 
            stat_text.append("\n$3=" + steppulsewidth ); 
            stat_text.append("\n$4=" + feedrate);
            stat_text.append("\n$5=" + seekrate ); 
            stat_text.append("\n$6=" + mmperarcsegment ); 
            stat_text.append("\n$7=" + invertmask);
            stat_text.append("\n$8=" + accel ); 
            stat_text.append("\n$9=" + corneringdev);

            tSettings = new String[MaxCmds];
            for(int ctr = 0; ctr < MaxCmds; ctr++)
            {
                tSettings[ctr] = "";
            }
            
            tSettings[0] = "$0=" + RoundIt(xystepspermm,3) + "\n\r";
            tSettings[1] = "$1=" + RoundIt(xystepspermm,3) + "\n\r";
            tSettings[2] = "$2=" + zstepspermm + "\n\r";
            tSettings[3] = "$3=" + steppulsewidth + "\n\r";
            tSettings[4] = "$4=" + feedrate + "\n\r";
            tSettings[5] = "$5=" + seekrate + "\n\r";
            tSettings[6] = "$6=" + mmperarcsegment + "\n\r";
            tSettings[7] = "$7=" + invertmask + "\n\r";
            tSettings[8] = "$8=" + accel + "\n\r";
            tSettings[9] = "$9=" + corneringdev + "\n\r";
            if (this.eac_gc_chk.isSelected() == true)
            {
                tSettings[10] = "$99=" + useLock + "\n\r";
                stat_text.append("\n$99=" + useLock);                
            }
        }
        isCalced = true;
    }
    
    public  double RoundIt(double Rval, int Rpl) {
        double p = (double)Math.pow(10,Rpl);
        Rval = Rval * p;
        double tmp = Math.round(Rval);
        return (double)tmp/p;
    }
     java.util.List<CommPortIdentifier> getSerialPortList() {
        int type = CommPortIdentifier.PORT_SERIAL;
        int type2 = CommPortIdentifier.PORT_RAW;
        String temp = "";

        java.util.Enumeration<CommPortIdentifier> portEnum = 
                CommPortIdentifier.getPortIdentifiers();
        java.util.List<CommPortIdentifier> returnList =
                new java.util.ArrayList<CommPortIdentifier>();

        while ( portEnum.hasMoreElements() ) 
        {
            CommPortIdentifier portIdentifier = portEnum.nextElement();
            if (portIdentifier.getPortType() == type) {
                returnList.add(portIdentifier);
            }
        }

        return returnList;
    }
    void SendStr(String data) {        
        
        int len = data.length();

        byte[] newData = data.getBytes();
        
        //try {
//            StrOut.write(newData);    
//        } catch (Exception e){}
        
        isReady = false;
        PrintStream printStream = new PrintStream(StrOut);
        printStream.print(data);
        printStream.close();    
    }
    public boolean ClosePort(){
        try {
            isReady = false;
            StrIn.close();
            StrOut.close();
            MyComm.close();
            
        } catch (IOException ex){
            return false;
        }
        return true;
    }
    public boolean OpenPort(String COMP, int BAUDR )throws Exception {
    
        CommPortIdentifier PortIdent = CommPortIdentifier.getPortIdentifier(COMP);
        
        if(PortIdent.isCurrentlyOwned() == true){
             
            return false;
        } else {
            MyComm = PortIdent.open(this.getClass().getName(),2000);
            SerialPort MySerial = (SerialPort)MyComm;
            MySerial.setSerialPortParams(BAUDR, SerialPort.DATABITS_8,SerialPort.STOPBITS_1,SerialPort.PARITY_NONE);
            
            StrIn = MySerial.getInputStream();
            StrOut = MySerial.getOutputStream();
            
            MySerial.addEventListener(this);
            MySerial.notifyOnDataAvailable(true);
            MySerial.notifyOnBreakInterrupt(true);
            return true;            
        }   
    }
    
    private String lineTerminator = "\r\n";
    @Override
    public void serialEvent(SerialPortEvent spe){
        if (spe.getEventType() == SerialPortEvent.DATA_AVAILABLE) {
            try
            {
               String inputStr;
               inputStr = readLineFromCommUntil(StrIn, lineTerminator);
               
               if("ok\r".equals(inputStr)){
                   isReady = true;
               } else if("\r".equals(inputStr)){
                   isReady = true;
               }
               //stat_text.append(inputStr);
                       
            }
            catch ( IOException e )
            {
               stat_text.append((e.getMessage().toString()));
            }
        }
    }
    
    String readLineFromCommUntil(InputStream myIn, String term) throws IOException {
        if (term == null || term.length() == 0) {
            return "";
        }
        
        int data;
        StringBuilder buffer = new StringBuilder();
        int terminatorPosition = 0;
        
        while ( ( data = myIn.read()) > -1 ) {
            // My funky way of checking for the terminating characters..
            if ( data == term.charAt(terminatorPosition) ) {
                terminatorPosition++;
            } else {
                terminatorPosition = 0;
            }

            if (terminatorPosition == term.length()) {
                break;
            }

            buffer.append((char)data);
        }
        
        return buffer.toString();
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainfrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainfrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainfrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainfrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new mainfrm().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField a_g_text;
    private javax.swing.JTextField as_g_text;
    private javax.swing.JTextField baud_text;
    private javax.swing.JTextField bp_xy_text;
    private javax.swing.JTextField cd_g_text;
    private javax.swing.JCheckBox eac_gc_chk;
    private javax.swing.JTextField fr_g_text;
    private javax.swing.JTextField im_g_text;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox lst_comm;
    private javax.swing.JCheckBox ml_astcfg_chk;
    private javax.swing.JComboBox ms_xy_text;
    private javax.swing.JComboBox ms_z_text;
    private javax.swing.JTextField pt_xy_text;
    private javax.swing.JTextField rp_z_text;
    private javax.swing.JTextField spr_xy_text;
    private javax.swing.JTextField spr_z_text;
    private javax.swing.JTextField spw_g_text;
    private javax.swing.JTextField sr_g_text;
    private javax.swing.JTextArea stat_text;
    // End of variables declaration//GEN-END:variables
}
